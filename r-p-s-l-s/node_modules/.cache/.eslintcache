[{"/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/index.js":"1","/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/App.js":"2","/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/Main.js":"3","/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/Result.js":"4","/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/Display.js":"5","/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/Choices.js":"6","/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/utils/index.js":"7","/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/Player.js":"8","/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/ChoiceCard.js":"9","/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/Reset.js":"10"},{"size":232,"mtime":1691795918157,"results":"11","hashOfConfig":"12"},{"size":144,"mtime":1691796646202,"results":"13","hashOfConfig":"12"},{"size":4708,"mtime":1691875952340,"results":"14","hashOfConfig":"12"},{"size":1182,"mtime":1691875802785,"results":"15","hashOfConfig":"12"},{"size":402,"mtime":1691802401572,"results":"16","hashOfConfig":"12"},{"size":485,"mtime":1691804614427,"results":"17","hashOfConfig":"12"},{"size":380,"mtime":1691803260590,"results":"18","hashOfConfig":"12"},{"size":294,"mtime":1691802391688,"results":"19","hashOfConfig":"12"},{"size":310,"mtime":1691799801509,"results":"20","hashOfConfig":"12"},{"size":765,"mtime":1691874547415,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19y7qz",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/index.js",[],[],"/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/App.js",[],[],[],"/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/Main.js",["55"],[],"import React, { useState, useEffect } from \"react\";\nimport Result from \"./Result\";\nimport Display from \"./Display\";\nimport Choices from \"./Choices\";\nimport Reset from \"./Reset\";\n\nimport { getRandomGameItem, calculatorUserWinner } from \"../utils\";\n\nconst gameItems = [\n  {\n    url: \"/images/rock-hand.png\",\n    id: 0,\n    winItemIds: [2, 3],\n    name: \"Rock\",\n  },\n  {\n    url: \"/images/paper-hand.png\",\n    id: 1,\n    winItemIds: [0, 4],\n    name: \"Paper\",\n  },\n  {\n    url: \"/images/scissors-hand.png\",\n    id: 2,\n    winItemIds: [1, 3],\n    name: \"Scissor\",\n  },\n  {\n    url: \"/images/lizard-hand.png\",\n    id: 3,\n    winItemIds: [1, 4],\n    name: \"Lizard\",\n  },\n  {\n    url: \"/images/spock-hand.png\",\n    id: 4,\n    winItemIds: [0, 2],\n    name: \"Spock\",\n  },\n];\n\nexport default function Main() {\n  const [result, setResult] = useState(\"N/N\");\n  const [userGameItem, setUserGameItem] = useState(null);\n  const [computerGameItem, setComputerGameItem] = useState(null);\n  const [userScore, setUserScore] = useState(0);\n  const [computerScore, setComputerScore] = useState(0);\n  const [winningScore, setWinningScore] = useState(3);\n  const [resetLayout, setResetLayout] = useState(false);\n\n  const handleGameItemChange = (gameItem) => {\n    setUserGameItem({ ...gameItem });\n  };\n  const handleReset = () => {\n    setUserGameItem(null);\n    setComputerGameItem(null);\n    setResult(\"N/N\");\n    setUserScore(0);\n    setComputerScore(0);\n    setResetLayout(false);\n  };\n\n  useEffect(() => {\n    if (userGameItem) {\n      const computerNewItem = getRandomGameItem(gameItems);\n      setComputerGameItem({ ...computerNewItem });\n      const gameResult = calculatorUserWinner(userGameItem, computerNewItem);\n      setResult(gameResult);\n      if (gameResult === \"Win\") {\n        setUserScore(userScore + 1);\n      } else if (gameResult === \"Lost\") {\n        setComputerScore(computerScore + 1);\n      }\n    }\n  }, [userGameItem]);\n\n  const gameStartClick = () => {\n    const gameInitial = document.querySelector(\".game-initial\");\n    const countDown = document.querySelector(\".countdown\");\n    const gameStart = document.querySelector(\".game-start\");\n\n    gameStart.style.display = \"none\";\n    gameInitial.style.display = \"none\";\n    countDown.style.display = \"flex\";\n    // countDown.textContent = 5;\n    let count = 3;\n    const timer = setInterval(() => {\n      countDown.textContent = count;\n      count--;\n      console.log(count);\n      if (count < 0) {\n        clearInterval(timer);\n        console.log(\"Timer stopped\");\n        gameStart.style.display = \"block\"; // Show the game start section when the countdown is finished\n        countDown.style.display = \"none\"; // Hide the countdown section\n      }\n    }, 1000); // 1000 milliseconds, or 1 second\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"main\">\n        <h1>Rock Paper Scissor Lizard Spock</h1>\n        <div className=\"row\">\n          <img className=\"rules\" src=\"/images/rules.png\" alt=\"rules\" />\n          <div className=\"game-container\">\n            \n            <Display />\n            <div className=\"game-initial\">\n              <div className=\"win-number\">\n                Win by\n                <input\n                  type=\"number\"\n                  value = {winningScore}\n                  min=\"1\"\n                  step=\"1\"\n                  onChange={(e) => setWinningScore(parseInt(e.target.value))}\n                />\n              </div>\n              <button className=\"start-button\" onClick={gameStartClick}>\n                Start\n              </button>\n            </div>\n            <div className=\"countdown\"> </div>\n            <div className=\"game-start\">\n            {!resetLayout && (<>\n                  <Choices\n                    gameItems={gameItems}\n                    handleGameItemChange={handleGameItemChange}\n                  />\n                  <Result\n                    user1GameItem={userGameItem}\n                    user2GameItem={computerGameItem}\n                    result={result}\n                    userScore={userScore}\n                    computerScore={computerScore}\n                    winningScore={winningScore}\n                    setResetLayout={setResetLayout}\n                  />\n                  </>)}\n            </div>\n            <div className=\"reset\">\n              {resetLayout && (\n                <Reset\n                  handleReset={handleReset}\n                  userScore={userScore}\n                  computerScore={computerScore}\n                  setResetLayout={setResetLayout}\n                />\n              )}\n            </div>\n          </div>\n          <div className=\"game-end\"> </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/Result.js",[],[],"/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/Display.js",[],[],[],"/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/Choices.js",[],[],"/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/utils/index.js",[],[],"/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/Player.js",[],[],"/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/ChoiceCard.js",[],[],"/Users/huybui/Desktop/gofrontend/rock-paper-scrissor-game/src/components/Reset.js",[],[],{"ruleId":"56","severity":1,"message":"57","line":75,"column":6,"nodeType":"58","endLine":75,"endColumn":20,"suggestions":"59"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'computerScore' and 'userScore'. Either include them or remove the dependency array. You can also do a functional update 'setUserScore(u => ...)' if you only need 'userScore' in the 'setUserScore' call.","ArrayExpression",["60"],{"desc":"61","fix":"62"},"Update the dependencies array to be: [computerScore, userGameItem, userScore]",{"range":"63","text":"64"},[1908,1922],"[computerScore, userGameItem, userScore]"]